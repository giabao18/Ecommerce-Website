// This project is running on NetBeans link database (sql server not mysql so that you need to adjust java file a little bit) 


/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package books;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Gia Bao
 */
public class frmMain extends javax.swing.JFrame {

    /**
     * Creates new form frmMain
     */
    public frmMain() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton2 = new javax.swing.JButton();
        btnRun = new javax.swing.JButton();
        CheckBox1 = new javax.swing.JCheckBox();
        CheckBox2 = new javax.swing.JCheckBox();
        CheckBox3 = new javax.swing.JCheckBox();
        CheckBox4 = new javax.swing.JCheckBox();
        CheckBox7 = new javax.swing.JCheckBox();
        CheckBox8 = new javax.swing.JCheckBox();
        jLabel1 = new javax.swing.JLabel();
        Button1 = new javax.swing.JButton();
        Button3 = new javax.swing.JButton();
        Button4 = new javax.swing.JButton();
        Button5 = new javax.swing.JButton();
        Button7 = new javax.swing.JButton();
        Button8 = new javax.swing.JButton();
        CheckBox5 = new javax.swing.JCheckBox();
        jScrollPane2 = new javax.swing.JScrollPane();
        tabResult = new javax.swing.JTable();
        CheckBox9 = new javax.swing.JCheckBox();
        Button9 = new javax.swing.JButton();
        CheckBox10 = new javax.swing.JCheckBox();
        Button10 = new javax.swing.JButton();
        CheckBox11 = new javax.swing.JCheckBox();
        Button11 = new javax.swing.JButton();
        txtQuery = new javax.swing.JTextField();
        Button12 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        jButton2.setText("Run");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnRun.setText("Run");
        btnRun.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRunActionPerformed(evt);
            }
        });
        getContentPane().add(btnRun, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 130, -1, -1));

        CheckBox1.setText("Admin");
        CheckBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CheckBox1ActionPerformed(evt);
            }
        });
        getContentPane().add(CheckBox1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 130, -1, -1));

        CheckBox2.setText("Clients");
        CheckBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CheckBox2ActionPerformed(evt);
            }
        });
        getContentPane().add(CheckBox2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 170, -1, -1));

        CheckBox3.setText("Make order");
        CheckBox3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CheckBox3ActionPerformed(evt);
            }
        });
        getContentPane().add(CheckBox3, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 210, -1, -1));

        CheckBox4.setText("Product");
        CheckBox4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CheckBox4ActionPerformed(evt);
            }
        });
        getContentPane().add(CheckBox4, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 250, -1, -1));

        CheckBox7.setText("Provider");
        CheckBox7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CheckBox7ActionPerformed(evt);
            }
        });
        getContentPane().add(CheckBox7, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 330, -1, -1));

        CheckBox8.setText("Shopping Website");
        CheckBox8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CheckBox8ActionPerformed(evt);
            }
        });
        getContentPane().add(CheckBox8, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 370, -1, -1));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Group 12 - Multi-Client Website Offering Client Services");
        jLabel1.setMaximumSize(new java.awt.Dimension(400, 32));
        jLabel1.setMinimumSize(new java.awt.Dimension(400, 32));
        jLabel1.setPreferredSize(new java.awt.Dimension(400, 32));
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 70, 630, -1));

        Button1.setText("Run");
        Button1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Button1ActionPerformed(evt);
            }
        });
        getContentPane().add(Button1, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 170, -1, -1));

        Button3.setText("Run");
        Button3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Button3ActionPerformed(evt);
            }
        });
        getContentPane().add(Button3, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 210, -1, -1));

        Button4.setText("Run");
        Button4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Button4ActionPerformed(evt);
            }
        });
        getContentPane().add(Button4, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 250, -1, -1));

        Button5.setText("Run");
        Button5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Button5ActionPerformed(evt);
            }
        });
        getContentPane().add(Button5, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 290, -1, -1));

        Button7.setText("Run");
        Button7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Button7ActionPerformed(evt);
            }
        });
        getContentPane().add(Button7, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 330, -1, -1));

        Button8.setText("Run");
        Button8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Button8ActionPerformed(evt);
            }
        });
        getContentPane().add(Button8, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 370, -1, -1));

        CheckBox5.setText("Product Category");
        CheckBox5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CheckBox5ActionPerformed(evt);
            }
        });
        getContentPane().add(CheckBox5, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 290, -1, -1));

        tabResult.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(tabResult);

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 100, 700, 430));

        CheckBox9.setText("Distribution");
        CheckBox9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CheckBox9ActionPerformed(evt);
            }
        });
        getContentPane().add(CheckBox9, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 410, -1, -1));

        Button9.setText("Run");
        Button9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Button9ActionPerformed(evt);
            }
        });
        getContentPane().add(Button9, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 410, -1, -1));

        CheckBox10.setText("Menu");
        CheckBox10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CheckBox10ActionPerformed(evt);
            }
        });
        getContentPane().add(CheckBox10, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 450, -1, -1));

        Button10.setText("Run");
        Button10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Button10ActionPerformed(evt);
            }
        });
        getContentPane().add(Button10, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 450, -1, -1));

        CheckBox11.setText("Selection");
        CheckBox11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CheckBox11ActionPerformed(evt);
            }
        });
        getContentPane().add(CheckBox11, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 490, -1, -1));

        Button11.setText("Run");
        Button11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Button11ActionPerformed(evt);
            }
        });
        getContentPane().add(Button11, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 490, -1, -1));

        txtQuery.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtQueryActionPerformed(evt);
            }
        });
        getContentPane().add(txtQuery, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 550, 700, 90));

        Button12.setText("Run");
        Button12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Button12ActionPerformed(evt);
            }
        });
        getContentPane().add(Button12, new org.netbeans.lib.awtextra.AbsoluteConstraints(1020, 580, -1, -1));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/books/img/3.jpg"))); // NOI18N
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1120, 730));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnRunActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRunActionPerformed
        // TODO add your handling code here:
        try {
                // Establish database connection
            Connection conn = DriverManager.getConnection("jdbc:sqlserver://localhost:1433;databaseName=MultiClientWebsiteShopping;user=sa;password=hoangbao;encrypt=true;trustServerCertificate=true");

                // Create a statement to execute the query
            Statement stmt = conn.createStatement();

                // Execute the query to retrieve all admin information
            String query = "SELECT * FROM Admin";
            ResultSet rs = stmt.executeQuery(query);

                // Clear the text field
            Vector vct_data = new Vector();
            ResultSetMetaData metaData = rs.getMetaData();
            int numberOfColumns = metaData.getColumnCount();
            Vector hdata = new Vector();
            for (int i = 1; i <= numberOfColumns; i++) {
                hdata.add(metaData.getColumnName(i));
            }
            //  Metadata
            while (rs.next()) {
                Vector idata = new Vector();
                for (int i = 1; i <= numberOfColumns; i++) {
                    idata.add(rs.getObject(i));
                }
                vct_data.add(idata);
            }
            tabResult.setModel(new DefaultTableModel(vct_data, hdata));

                // Close the result set, statement, and connection
            rs.close();
            stmt.close();
            conn.close();
        }   catch (SQLException ex) {
            Logger.getLogger(frmMain.class.getName()).log(Level.SEVERE, null, ex);
        }   
    }//GEN-LAST:event_btnRunActionPerformed

    private void CheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CheckBox1ActionPerformed
        // TODO add your handling code here:
        if (CheckBox1.isSelected()) {
        // Show an input dialog to enter client information
            String adminName = JOptionPane.showInputDialog(this, "Enter Admin Name:");        
            String adminEmail = JOptionPane.showInputDialog(this, "Enter Admin Email:");
            String adminContact = JOptionPane.showInputDialog(this, "Enter Admin Contact:");
            String URL = JOptionPane.showInputDialog(this, "Website URL:");

            try {
                // Establish database connection
                Connection conn = DriverManager.getConnection("jdbc:sqlserver://localhost:1433;databaseName=MultiClientWebsiteShopping;user=sa;password=hoangbao;encrypt=true;trustServerCertificate=true");

                // Create a prepared statement to insert the client information into the Clients table
                String query = "INSERT INTO Admin (Admin_Name, Admin_Email, Admin_ContactNumber, Website_URL) VALUES (?, ?, ?, ?)";
                PreparedStatement pstmt = conn.prepareStatement(query);
                pstmt.setString(1, adminName);  
                pstmt.setString(2, adminEmail);           
                pstmt.setString(3, adminContact);
                pstmt.setString(4, URL);

                // Execute the insert statement
                int rowsAffected = pstmt.executeUpdate();

                if (rowsAffected > 0) {
                    JOptionPane.showMessageDialog(this, "Admin information added successfully.");
                } else {
                    JOptionPane.showMessageDialog(this, "Failed to add client information.");
                }

                // Close the prepared statement and connection
                pstmt.close();
                conn.close();
            } catch (SQLException ex) {
                Logger.getLogger(frmMain.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_CheckBox1ActionPerformed

    private void CheckBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CheckBox2ActionPerformed
        // TODO add your handling code here:
        if (CheckBox2.isSelected()) {
        // Show an input dialog to enter client information
            String clientContact = JOptionPane.showInputDialog(this, "Enter Client Contact:");
            String clientAddress = JOptionPane.showInputDialog(this, "Enter Client Address:");        
            //String clientID = JOptionPane.showInputDialog(this, "Enter Client ID:");
            String clientName = JOptionPane.showInputDialog(this, "Enter Client Name:");

            try {
                // Establish database connection
                Connection conn = DriverManager.getConnection("jdbc:sqlserver://localhost:1433;databaseName=MultiClientWebsiteShopping;user=sa;password=hoangbao;encrypt=true;trustServerCertificate=true");

                // Create a prepared statement to insert the client information into the Clients table
                String query = "INSERT INTO Clients (Client_ContactNumber, Client_Address, Client_Name) VALUES (?, ?, ?)";
                PreparedStatement pstmt = conn.prepareStatement(query);
                pstmt.setString(1, clientContact);  
                pstmt.setString(2, clientAddress);           
                //pstmt.setString(3, clientID);
                pstmt.setString(3, clientName);

                // Execute the insert statement
                int rowsAffected = pstmt.executeUpdate();

                if (rowsAffected > 0) {
                    JOptionPane.showMessageDialog(this, "Client information added successfully.");
                } else {
                    JOptionPane.showMessageDialog(this, "Failed to add client information.");
                }

                // Close the prepared statement and connection
                pstmt.close();
                conn.close();
            } catch (SQLException ex) {
                Logger.getLogger(frmMain.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_CheckBox2ActionPerformed

    private void CheckBox3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CheckBox3ActionPerformed
        // TODO add your handling code here:
        if (CheckBox3.isSelected()) {
        // Show input dialogs to get order information from the user
            String orderDate = JOptionPane.showInputDialog(this, "Enter Order Date (YYYY-MM-DD):");
            String productQuantity = JOptionPane.showInputDialog(this, "Enter Product Quantity:");
            String totalPrice = JOptionPane.showInputDialog(this, "Enter Total Price:");
            String clientID = JOptionPane.showInputDialog(this, "Enter Client ID:");

            try {
                // Establish database connection
                Connection conn = DriverManager.getConnection("jdbc:sqlserver://localhost:1433;databaseName=MultiClientWebsiteShopping;user=sa;password=hoangbao;encrypt=true;trustServerCertificate=true");

                // Create a prepared statement to insert the order information into the "Make_Order" table
                String query = "INSERT INTO Make_Order (Make_Order_Date, Make_Order_Product_Quantity, Make_Order_Total_Price, Client_ID) VALUES (?, ?, ?, ?)";
                PreparedStatement stmt = conn.prepareStatement(query);
                stmt.setDate(1, java.sql.Date.valueOf(orderDate));
                stmt.setInt(2, Integer.parseInt(productQuantity));
                stmt.setInt(3, Integer.parseInt(totalPrice));
                stmt.setInt(4, Integer.parseInt(clientID));

                // Execute the statement to insert the data
                int rowsAffected = stmt.executeUpdate();

                if (rowsAffected > 0) {
                    JOptionPane.showMessageDialog(this, "Order information added successfully.");
                } else {
                    JOptionPane.showMessageDialog(this, "Failed to add order information.");
                }

                // Close the statement and connection
                stmt.close();
                conn.close();
            } catch (SQLException ex) {
                Logger.getLogger(frmMain.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_CheckBox3ActionPerformed

    
    private void CheckBox4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CheckBox4ActionPerformed
        // TODO add your handling code here:
        if (CheckBox4.isSelected()) {    
            String productPrice = JOptionPane.showInputDialog(this, "Enter Product Price:");
            String productName = JOptionPane.showInputDialog(this, "Enter Product Name:");            
            String productQuantity = JOptionPane.showInputDialog(this, "Enter Product Quantity:");
            String productCategoryID = JOptionPane.showInputDialog(this, "Enter Product Category ID:");

            try (Connection connection = DriverManager.getConnection("jdbc:sqlserver://localhost:1433;databaseName=MultiClientWebsiteShopping;user=sa;password=hoangbao;encrypt=true;trustServerCertificate=true")) {
                String sql = "INSERT INTO Product (Product_Price, Product_Name, Product_Quantity, Category_ID) VALUES (?, ?, ?, ?)";

                try (PreparedStatement statement = connection.prepareStatement(sql)) {
                    statement.setInt(1, Integer.parseInt(productPrice));
                    statement.setString(2, productName);
                    statement.setInt(3, Integer.parseInt(productQuantity));                                      
                    statement.setInt(4, Integer.parseInt(productCategoryID));
                    statement.executeUpdate();
                }

                JOptionPane.showMessageDialog(this, "Product data loaded successfully.");
            } catch (SQLException ex) {
                ex.printStackTrace();
                JOptionPane.showMessageDialog(this, "Error loading product data: " + ex.getMessage());
            }
        }
    }//GEN-LAST:event_CheckBox4ActionPerformed

    private void Button1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Button1ActionPerformed
        // TODO add your handling code here:
        try {
                // Establish database connection
            Connection conn = DriverManager.getConnection("jdbc:sqlserver://localhost:1433;databaseName=MultiClientWebsiteShopping;user=sa;password=hoangbao;encrypt=true;trustServerCertificate=true");

                // Create a statement to execute the query
            Statement stmt = conn.createStatement();

                // Execute the query to retrieve all admin information
            String query = "SELECT * FROM Clients";
            ResultSet rs = stmt.executeQuery(query);

                // Clear the text field
            Vector vct_data = new Vector();
            ResultSetMetaData metaData = rs.getMetaData();
            int numberOfColumns = metaData.getColumnCount();
            Vector hdata = new Vector();
            for (int i = 1; i <= numberOfColumns; i++) {
                hdata.add(metaData.getColumnName(i));
            }
            //  Metadata
            while (rs.next()) {
                Vector idata = new Vector();
                for (int i = 1; i <= numberOfColumns; i++) {
                    idata.add(rs.getObject(i));
                }
                vct_data.add(idata);
            }
            tabResult.setModel(new DefaultTableModel(vct_data, hdata));

                // Close the result set, statement, and connection
            rs.close();
            stmt.close();
            conn.close();
        }   catch (SQLException ex) {
            Logger.getLogger(frmMain.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_Button1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void Button5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Button5ActionPerformed
        // TODO add your handling code here:
        try {
                // Establish database connection
            Connection conn = DriverManager.getConnection("jdbc:sqlserver://localhost:1433;databaseName=MultiClientWebsiteShopping;user=sa;password=hoangbao;encrypt=true;trustServerCertificate=true");

                // Create a statement to execute the query
            Statement stmt = conn.createStatement();

                // Execute the query to retrieve all admin information
            String query = "SELECT * FROM Product_Category";
            ResultSet rs = stmt.executeQuery(query);

                // Clear the text field
            Vector vct_data = new Vector();
            ResultSetMetaData metaData = rs.getMetaData();
            int numberOfColumns = metaData.getColumnCount();
            Vector hdata = new Vector();
            for (int i = 1; i <= numberOfColumns; i++) {
                hdata.add(metaData.getColumnName(i));
            }
            //  Metadata
            while (rs.next()) {
                Vector idata = new Vector();
                for (int i = 1; i <= numberOfColumns; i++) {
                    idata.add(rs.getObject(i));
                }
                vct_data.add(idata);
            }
            tabResult.setModel(new DefaultTableModel(vct_data, hdata));

                // Close the result set, statement, and connection
            rs.close();
            stmt.close();
            conn.close();
        }   catch (SQLException ex) {
            Logger.getLogger(frmMain.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_Button5ActionPerformed

    private void CheckBox5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CheckBox5ActionPerformed
        // TODO add your handling code here:
        if (CheckBox5.isSelected()) {
            String categoryName = JOptionPane.showInputDialog(this, "Enter Product Category Name:");

            try (Connection connection = DriverManager.getConnection("jdbc:sqlserver://localhost:1433;databaseName=MultiClientWebsiteShopping;user=sa;password=hoangbao;encrypt=true;trustServerCertificate=true")) {
                String sql = "INSERT INTO Product_Category (Category_Name) VALUES (?)";

                try (PreparedStatement statement = connection.prepareStatement(sql)) {
                    statement.setString(1, categoryName);

                    statement.executeUpdate();
                }

                JOptionPane.showMessageDialog(this, "Product category data loaded successfully.");
            } catch (SQLException ex) {
                ex.printStackTrace();
                JOptionPane.showMessageDialog(this, "Error loading product category data: " + ex.getMessage());
            }
        }
    }//GEN-LAST:event_CheckBox5ActionPerformed

    private void Button4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Button4ActionPerformed
        // TODO add your handling code here:
        try {
                // Establish database connection
            Connection conn = DriverManager.getConnection("jdbc:sqlserver://localhost:1433;databaseName=MultiClientWebsiteShopping;user=sa;password=hoangbao;encrypt=true;trustServerCertificate=true");

                // Create a statement to execute the query
            Statement stmt = conn.createStatement();

                // Execute the query to retrieve all admin information
            String query = "SELECT * FROM Product";
            ResultSet rs = stmt.executeQuery(query);

                // Clear the text field
            Vector vct_data = new Vector();
            ResultSetMetaData metaData = rs.getMetaData();
            int numberOfColumns = metaData.getColumnCount();
            Vector hdata = new Vector();
            for (int i = 1; i <= numberOfColumns; i++) {
                hdata.add(metaData.getColumnName(i));
            }
            //  Metadata
            while (rs.next()) {
                Vector idata = new Vector();
                for (int i = 1; i <= numberOfColumns; i++) {
                    idata.add(rs.getObject(i));
                }
                vct_data.add(idata);
            }
            tabResult.setModel(new DefaultTableModel(vct_data, hdata));

                // Close the result set, statement, and connection
            rs.close();
            stmt.close();
            conn.close();
        }   catch (SQLException ex) {
            Logger.getLogger(frmMain.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_Button4ActionPerformed

    private void CheckBox7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CheckBox7ActionPerformed
        // TODO add your handling code here:
        if (CheckBox7.isSelected()) {
            String providerBrand = JOptionPane.showInputDialog(this, "Enter Provider Brand:");
            String providerEmail = JOptionPane.showInputDialog(this, "Enter Provider Email:");
            String providerName = JOptionPane.showInputDialog(this, "Enter Provider Name:");
           
            

            try (Connection connection = DriverManager.getConnection("jdbc:sqlserver://localhost:1433;databaseName=MultiClientWebsiteShopping;user=sa;password=hoangbao;encrypt=true;trustServerCertificate=true")) {
                String sql = "INSERT INTO Provider (Provider_Brand, Provider_Email, Provider_Product_Name) VALUES (?, ?, ?)";

                try (PreparedStatement statement = connection.prepareStatement(sql)) {
                    statement.setString(1, providerBrand);
                    statement.setString(2, providerEmail);
                    statement.setString(3, providerName);

                    statement.executeUpdate();
                }

                JOptionPane.showMessageDialog(this, "Product category data loaded successfully.");
            } catch (SQLException ex) {
                ex.printStackTrace();
                JOptionPane.showMessageDialog(this, "Error loading product category data: " + ex.getMessage());
            }
        }
    }//GEN-LAST:event_CheckBox7ActionPerformed

    private void Button7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Button7ActionPerformed
        // TODO add your handling code here:
        try {
                // Establish database connection
            Connection conn = DriverManager.getConnection("jdbc:sqlserver://localhost:1433;databaseName=MultiClientWebsiteShopping;user=sa;password=hoangbao;encrypt=true;trustServerCertificate=true");

                // Create a statement to execute the query
            Statement stmt = conn.createStatement();

                // Execute the query to retrieve all admin information
            String query = "SELECT * FROM Provider";
            ResultSet rs = stmt.executeQuery(query);

                // Clear the text field
            Vector vct_data = new Vector();
            ResultSetMetaData metaData = rs.getMetaData();
            int numberOfColumns = metaData.getColumnCount();
            Vector hdata = new Vector();
            for (int i = 1; i <= numberOfColumns; i++) {
                hdata.add(metaData.getColumnName(i));
            }
            //  Metadata
            while (rs.next()) {
                Vector idata = new Vector();
                for (int i = 1; i <= numberOfColumns; i++) {
                    idata.add(rs.getObject(i));
                }
                vct_data.add(idata);
            }
            tabResult.setModel(new DefaultTableModel(vct_data, hdata));

                // Close the result set, statement, and connection
            rs.close();
            stmt.close();
            conn.close();
        }   catch (SQLException ex) {
            Logger.getLogger(frmMain.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_Button7ActionPerformed

    private void Button3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Button3ActionPerformed
        // TODO add your handling code here:
        try {
                // Establish database connection
            Connection conn = DriverManager.getConnection("jdbc:sqlserver://localhost:1433;databaseName=MultiClientWebsiteShopping;user=sa;password=hoangbao;encrypt=true;trustServerCertificate=true");

                // Create a statement to execute the query
            Statement stmt = conn.createStatement();

                // Execute the query to retrieve all admin information
            String query = "SELECT * FROM Make_Order";
            ResultSet rs = stmt.executeQuery(query);

                // Clear the text field
            Vector vct_data = new Vector();
            ResultSetMetaData metaData = rs.getMetaData();
            int numberOfColumns = metaData.getColumnCount();
            Vector hdata = new Vector();
            for (int i = 1; i <= numberOfColumns; i++) {
                hdata.add(metaData.getColumnName(i));
            }
            //  Metadata
            while (rs.next()) {
                Vector idata = new Vector();
                for (int i = 1; i <= numberOfColumns; i++) {
                    idata.add(rs.getObject(i));
                }
                vct_data.add(idata);
            }
            tabResult.setModel(new DefaultTableModel(vct_data, hdata));

                // Close the result set, statement, and connection
            rs.close();
            stmt.close();
            conn.close();
        }   catch (SQLException ex) {
            Logger.getLogger(frmMain.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_Button3ActionPerformed

    private void CheckBox8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CheckBox8ActionPerformed
        // TODO add your handling code here:
        if (CheckBox8.isSelected()) {
        // Prompt the user for Shopping Website information
            String url = JOptionPane.showInputDialog(this, "Enter Website URL:");
            String email = JOptionPane.showInputDialog(this, "Enter Website Email:");
            String contactNumber = JOptionPane.showInputDialog(this, "Enter Website Contact Number:");

            try {
                // Establish database connection
                Connection conn = DriverManager.getConnection("jdbc:sqlserver://localhost:1433;databaseName=MultiClientWebsiteShopping;user=sa;password=hoangbao;encrypt=true;trustServerCertificate=true");

                // Create a prepared statement for inserting data into Shopping_Website table
                String insertQuery = "INSERT INTO Shopping_Website (Website_URL, Website_Email, Website_ContactNumber) VALUES (?, ?, ?)";
                PreparedStatement pstmt = conn.prepareStatement(insertQuery);

                // Set the parameter values for the prepared statement
                pstmt.setString(1, url);
                pstmt.setString(2, email);
                pstmt.setString(3, contactNumber);

                // Execute the prepared statement to insert the data into the table
                pstmt.executeUpdate();

                // Close the prepared statement and connection
                pstmt.close();
                conn.close();

                // Show a success message to the user
                JOptionPane.showMessageDialog(this, "Shopping Website created successfully!");

            } catch (SQLException ex) {
                // Handle any exceptions that may occur during the database connection or data insertion process
                ex.printStackTrace();
                JOptionPane.showMessageDialog(this, "Error creating Shopping Website. Please try again.");
            }
        }
    }//GEN-LAST:event_CheckBox8ActionPerformed

    private void Button8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Button8ActionPerformed
        // TODO add your handling code here:
        try {
                // Establish database connection
            Connection conn = DriverManager.getConnection("jdbc:sqlserver://localhost:1433;databaseName=MultiClientWebsiteShopping;user=sa;password=hoangbao;encrypt=true;trustServerCertificate=true");

                // Create a statement to execute the query
            Statement stmt = conn.createStatement();

                // Execute the query to retrieve all admin information
            String query = "SELECT * FROM Shopping_Website";
            ResultSet rs = stmt.executeQuery(query);

                // Clear the text field
            Vector vct_data = new Vector();
            ResultSetMetaData metaData = rs.getMetaData();
            int numberOfColumns = metaData.getColumnCount();
            Vector hdata = new Vector();
            for (int i = 1; i <= numberOfColumns; i++) {
                hdata.add(metaData.getColumnName(i));
            }
            //  Metadata
            while (rs.next()) {
                Vector idata = new Vector();
                for (int i = 1; i <= numberOfColumns; i++) {
                    idata.add(rs.getObject(i));
                }
                vct_data.add(idata);
            }
            tabResult.setModel(new DefaultTableModel(vct_data, hdata));

                // Close the result set, statement, and connection
            rs.close();
            stmt.close();
            conn.close();
        }   catch (SQLException ex) {
            Logger.getLogger(frmMain.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_Button8ActionPerformed

    private void CheckBox9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CheckBox9ActionPerformed
        // TODO add your handling code here:
        if (CheckBox9.isSelected()) {
        // Prompt the user for Shopping Website information
            String productID = JOptionPane.showInputDialog(this, "Enter Product ID:");
            String providerBrand = JOptionPane.showInputDialog(this, "Enter Brand:");

            try {
                // Establish database connection
                Connection conn = DriverManager.getConnection("jdbc:sqlserver://localhost:1433;databaseName=MultiClientWebsiteShopping;user=sa;password=hoangbao;encrypt=true;trustServerCertificate=true");

                // Create a prepared statement for inserting data into Shopping_Website table
                String insertQuery = "INSERT INTO Distribution (Product_ID, Provider_Brand) VALUES (?, ?)";
                PreparedStatement pstmt = conn.prepareStatement(insertQuery);

                // Set the parameter values for the prepared statement
                pstmt.setString(1, productID);
                pstmt.setString(2, providerBrand);

                // Execute the prepared statement to insert the data into the table
                pstmt.executeUpdate();

                // Close the prepared statement and connection
                pstmt.close();
                conn.close();

                // Show a success message to the user
                JOptionPane.showMessageDialog(this, "Distribution created successfully!");

            } catch (SQLException ex) {
                // Handle any exceptions that may occur during the database connection or data insertion process
                ex.printStackTrace();
                JOptionPane.showMessageDialog(this, "Error creating Distribution. Please try again.");
            }
        }
    }//GEN-LAST:event_CheckBox9ActionPerformed

    private void Button9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Button9ActionPerformed
        // TODO add your handling code here:
        try {
                // Establish database connection
            Connection conn = DriverManager.getConnection("jdbc:sqlserver://localhost:1433;databaseName=MultiClientWebsiteShopping;user=sa;password=hoangbao;encrypt=true;trustServerCertificate=true");

                // Create a statement to execute the query
            Statement stmt = conn.createStatement();

                // Execute the query to retrieve all admin information
            String query = "SELECT * FROM Distribution";
            ResultSet rs = stmt.executeQuery(query);

                // Clear the text field
            Vector vct_data = new Vector();
            ResultSetMetaData metaData = rs.getMetaData();
            int numberOfColumns = metaData.getColumnCount();
            Vector hdata = new Vector();
            for (int i = 1; i <= numberOfColumns; i++) {
                hdata.add(metaData.getColumnName(i));
            }
            //  Metadata
            while (rs.next()) {
                Vector idata = new Vector();
                for (int i = 1; i <= numberOfColumns; i++) {
                    idata.add(rs.getObject(i));
                }
                vct_data.add(idata);
            }
            tabResult.setModel(new DefaultTableModel(vct_data, hdata));

                // Close the result set, statement, and connection
            rs.close();
            stmt.close();
            conn.close();
        }   catch (SQLException ex) {
            Logger.getLogger(frmMain.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_Button9ActionPerformed

    private void CheckBox10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CheckBox10ActionPerformed
        // TODO add your handling code here:
        if (CheckBox10.isSelected()) {
        // Prompt the user for Shopping Website information
            String URL = JOptionPane.showInputDialog(this, "Enter URL:");
            String categoryID = JOptionPane.showInputDialog(this, "Enter Category ID:");

            try {
                // Establish database connection
                Connection conn = DriverManager.getConnection("jdbc:sqlserver://localhost:1433;databaseName=MultiClientWebsiteShopping;user=sa;password=hoangbao;encrypt=true;trustServerCertificate=true");

                // Create a prepared statement for inserting data into Shopping_Website table
                String insertQuery = "INSERT INTO Distribution (Website_URL, Category_ID) VALUES (?, ?)";
                PreparedStatement pstmt = conn.prepareStatement(insertQuery);

                // Set the parameter values for the prepared statement
                pstmt.setString(1, URL);
                pstmt.setString(2, categoryID);

                // Execute the prepared statement to insert the data into the table
                pstmt.executeUpdate();

                // Close the prepared statement and connection
                pstmt.close();
                conn.close();

                // Show a success message to the user
                JOptionPane.showMessageDialog(this, "Menu created successfully!");

            } catch (SQLException ex) {
                // Handle any exceptions that may occur during the database connection or data insertion process
                ex.printStackTrace();
                JOptionPane.showMessageDialog(this, "Error creating Menu. Please try again.");
            }
        }
    }//GEN-LAST:event_CheckBox10ActionPerformed

    private void Button10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Button10ActionPerformed
        // TODO add your handling code here:
        try {
                // Establish database connection
            Connection conn = DriverManager.getConnection("jdbc:sqlserver://localhost:1433;databaseName=MultiClientWebsiteShopping;user=sa;password=hoangbao;encrypt=true;trustServerCertificate=true");

                // Create a statement to execute the query
            Statement stmt = conn.createStatement();

                // Execute the query to retrieve all admin information
            String query = "SELECT * FROM Menu";
            ResultSet rs = stmt.executeQuery(query);

                // Clear the text field
            Vector vct_data = new Vector();
            ResultSetMetaData metaData = rs.getMetaData();
            int numberOfColumns = metaData.getColumnCount();
            Vector hdata = new Vector();
            for (int i = 1; i <= numberOfColumns; i++) {
                hdata.add(metaData.getColumnName(i));
            }
            //  Metadata
            while (rs.next()) {
                Vector idata = new Vector();
                for (int i = 1; i <= numberOfColumns; i++) {
                    idata.add(rs.getObject(i));
                }
                vct_data.add(idata);
            }
            tabResult.setModel(new DefaultTableModel(vct_data, hdata));

                // Close the result set, statement, and connection
            rs.close();
            stmt.close();
            conn.close();
        }   catch (SQLException ex) {
            Logger.getLogger(frmMain.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_Button10ActionPerformed

    private void CheckBox11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CheckBox11ActionPerformed
        // TODO add your handling code here:
        if (CheckBox11.isSelected()) {
        // Prompt the user for Shopping Website information
            String makeorderID = JOptionPane.showInputDialog(this, "Enter Make Order ID:");
            String productID = JOptionPane.showInputDialog(this, "Enter Product ID:");

            try {
                // Establish database connection
                Connection conn = DriverManager.getConnection("jdbc:sqlserver://localhost:1433;databaseName=MultiClientWebsiteShopping;user=sa;password=hoangbao;encrypt=true;trustServerCertificate=true");

                // Create a prepared statement for inserting data into Shopping_Website table
                String insertQuery = "INSERT INTO Selection (Make_Order_ID, Product_ID) VALUES (?, ?)";
                PreparedStatement pstmt = conn.prepareStatement(insertQuery);

                // Set the parameter values for the prepared statement
                pstmt.setString(1, makeorderID);
                pstmt.setString(2, productID);

                // Execute the prepared statement to insert the data into the table
                pstmt.executeUpdate();

                // Close the prepared statement and connection
                pstmt.close();
                conn.close();

                // Show a success message to the user
                JOptionPane.showMessageDialog(this, "Selection created successfully!");

            } catch (SQLException ex) {
                // Handle any exceptions that may occur during the database connection or data insertion process
                ex.printStackTrace();
                JOptionPane.showMessageDialog(this, "Error creating Selection. Please try again.");
            }
        }
    }//GEN-LAST:event_CheckBox11ActionPerformed

    private void Button11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Button11ActionPerformed
        // TODO add your handling code here:
        try {
                // Establish database connection
            Connection conn = DriverManager.getConnection("jdbc:sqlserver://localhost:1433;databaseName=MultiClientWebsiteShopping;user=sa;password=hoangbao;encrypt=true;trustServerCertificate=true");

                // Create a statement to execute the query
            Statement stmt = conn.createStatement();

                // Execute the query to retrieve all admin information
            String query = "SELECT * FROM Selection";
            ResultSet rs = stmt.executeQuery(query);

                // Clear the text field
            Vector vct_data = new Vector();
            ResultSetMetaData metaData = rs.getMetaData();
            int numberOfColumns = metaData.getColumnCount();
            Vector hdata = new Vector();
            for (int i = 1; i <= numberOfColumns; i++) {
                hdata.add(metaData.getColumnName(i));
            }
            //  Metadata
            while (rs.next()) {
                Vector idata = new Vector();
                for (int i = 1; i <= numberOfColumns; i++) {
                    idata.add(rs.getObject(i));
                }
                vct_data.add(idata);
            }
            tabResult.setModel(new DefaultTableModel(vct_data, hdata));

                // Close the result set, statement, and connection
            rs.close();
            stmt.close();
            conn.close();
        }   catch (SQLException ex) {
            Logger.getLogger(frmMain.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_Button11ActionPerformed

    private void txtQueryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtQueryActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtQueryActionPerformed

    private void Button12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Button12ActionPerformed
        // TODO add your handling code here:
        if (txtQuery.getText().length() == 0) {
            JOptionPane.showMessageDialog(null, "Please input query string!", "Message", JOptionPane.WARNING_MESSAGE);
            return;
        }
        String  connectionUrl = "jdbc:sqlserver://localhost:1433;databaseName=MultiClientWebsiteShopping;user=sa;password=hoangbao;encrypt=true;trustServerCertificate=true";
 
        try (Connection con = DriverManager.getConnection(connectionUrl); Statement stmt = con.createStatement();) {
            String SQL = txtQuery.getText();
            ResultSet rs = stmt.executeQuery(SQL);
 
            // Iterate through the data in the result set and display it.
            // process query results
            Vector vct_data = new Vector();
            ResultSetMetaData metaData = rs.getMetaData();
            int numberOfColumns = metaData.getColumnCount();
            Vector hdata = new Vector();
            for (int i = 1; i <= numberOfColumns; i++) {
                hdata.add(metaData.getColumnName(i));
            }
            //  Metadata
            while (rs.next()) {
                Vector idata = new Vector();
                for (int i = 1; i <= numberOfColumns; i++) {
                    idata.add(rs.getObject(i));
                }
                vct_data.add(idata);
            }
            tabResult.setModel(new DefaultTableModel(vct_data, hdata));
        } // Handle any errors that may have occurred.
        catch (SQLException e) {            

        }
    }//GEN-LAST:event_Button12ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new frmMain().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Button1;
    private javax.swing.JButton Button10;
    private javax.swing.JButton Button11;
    private javax.swing.JButton Button12;
    private javax.swing.JButton Button3;
    private javax.swing.JButton Button4;
    private javax.swing.JButton Button5;
    private javax.swing.JButton Button7;
    private javax.swing.JButton Button8;
    private javax.swing.JButton Button9;
    private javax.swing.JCheckBox CheckBox1;
    private javax.swing.JCheckBox CheckBox10;
    private javax.swing.JCheckBox CheckBox11;
    private javax.swing.JCheckBox CheckBox2;
    private javax.swing.JCheckBox CheckBox3;
    private javax.swing.JCheckBox CheckBox4;
    private javax.swing.JCheckBox CheckBox5;
    private javax.swing.JCheckBox CheckBox7;
    private javax.swing.JCheckBox CheckBox8;
    private javax.swing.JCheckBox CheckBox9;
    private javax.swing.JButton btnRun;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tabResult;
    private javax.swing.JTextField txtQuery;
    // End of variables declaration//GEN-END:variables
}
